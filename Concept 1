#import tkinter so we can make a GUI
import tkinter as tk
from tkinter import *

#quit subroutine
def quit():
    main_window.destroy()

#choosing background colour
bg_colour3 ="darksalmon"
#choosing label and button colours
bg_colour1 = "ivory2"

#print all the headings for when data is entered
def print_store_details():
    name_count = 0
    #Create the column headings
    Label(main_window, font=("Helvetica 10 bold"),text="Row",bg=bg_colour3).grid(column=0,row=7)
    Label(main_window, font=("Helvetica 10 bold"),text="Full Name",bg=bg_colour3).grid(column=1,row=7)
    Label(main_window, font=("Helvetica 10 bold"),text="Receipt Number",bg=bg_colour3).grid(column=2,row=7)
    Label(main_window, font=("Helvetica 10 bold"),text="The Item that is hired",bg=bg_colour3).grid(column=3,row=7)
    Label(main_window, font=("Helvetica 10 bold"),text="How many of the item",bg=bg_colour3).grid(column=4,row=7)

    #add each item in the list into its own row
    while name_count < counters['total_entries'] :
        Label(main_window, text=name_count,background='lightblue').grid(column=0,row=name_count+8) 
        Label(main_window, text=(store_details[name_count][0]),bg=bg_colour3).grid(column=1,row=name_count+8)
        Label(main_window, text=(store_details[name_count][1]),bg=bg_colour3).grid(column=2,row=name_count+8)
        Label(main_window, text=(store_details[name_count][2]),bg=bg_colour3).grid(column=3,row=name_count+8)
        Label(main_window, text=(store_details[name_count][3]),bg=bg_colour3).grid(column=4,row=name_count+8)
        name_count +=1
        counters['name_count'] = name_count

#add the next customer to the list
def append_name():
    if len(entry_name.get()) == 0 :
        #append each item to its own area of the list
        check_inputs()
    else:
        store_details.append([entry_name.get(),entry_receipt.get(),entry_hired_item.get(),entry_item_amount.get()])
        #clear the boxes
        entry_name.delete(0,'end')
        entry_receipt.delete(0,'end')
        entry_hired_item.delete(0,'end')
        entry_item_amount.delete(0,'end')
        counters['total_entries'] += 1


#delete a row from the list
def delete_row():
    #find which row is to be deleted and delete it
    del store_details[int(delete_item.get())]
    counters['total_entries'] -= 1
    name_count = counters['name_count']
    delete_item.delete(0,'end')

    #clear the last item displayed on the GUI
    Label(main_window, text="       ",bg=bg_colour3).grid(column=0,row=name_count+7) 
    Label(main_window, text="       ",bg=bg_colour3).grid(column=1,row=name_count+7)
    Label(main_window, text="       ",bg=bg_colour3).grid(column=2,row=name_count+7)
    Label(main_window, text="       ",bg=bg_colour3).grid(column=3,row=name_count+7)
    Label(main_window, text="       ",bg=bg_colour3).grid(column=4,row=name_count+7)

    #print all the items in the list
    print_store_details()

#Check the inputs are all valid
def check_inputs():
    input_check = 0
    Label(main_window, text="               ") .grid(column=2,row=0)
    Label(main_window, text="               ") .grid(column=2,row=1)
    Label(main_window, text="               ") .grid(column=2,row=2)
    Label(main_window, text="               ") .grid(column=2,row=3)

    #Check that name is not blank, set error text if blank   
    if len(entry_name.get()) == 0 :
        Label(main_window,fg="red", text="Required") .grid(column=2,row=0)
        input_check = 1

    #Check that receipt number is not blank, set error text if blank     
    if len(entry_receipt.get()) == 0 :
        Label(main_window,fg="red", text="Required") .grid(column=2,row=1)
        input_check = 1

    ##Check the item that is hired is not blank, set error text if blank
    if len(entry_hired_item.get()) == 0 :
        Label(main_window,fg="red", text="Required") .grid(column=2,row=2)
        input_check = 1

    #Check the amount of items hired is not blank and between 1 and 500, set error text if blank  
    if (entry_item_amount.get().isdigit()) : 
        if  int(entry_item_amount.get()) < 1 or  int(entry_item_amount.get()) > 500:
            Label(main_window,fg="red", text="1-500 only") .grid(column=2,row=3)
            input_check = 1
    else :
        Label(main_window,fg="red", text="1-500 only") .grid(column=2,row=3)
        input_check = 1

#create the buttons and labels
def setup_buttons():
    #create all the empty and default labels, buttons and entry boxes. Put them in the correct grid location
    Label(main_window, text="Full Name",bg=bg_colour3) .grid(column=0,row=0,sticky=E)
    Label(main_window, text="Receipt Number",bg=bg_colour3) .grid(column=0,row=1,sticky=E)
    Label(main_window, text="The Item that is hired",bg=bg_colour3) .grid(column=0,row=2,sticky=E)
    Label(main_window, text="How many of the item",bg=bg_colour3) .grid(column=0,row=3,sticky=E)
    Label(main_window, text="Row #",bg=bg_colour3) .grid(column=3,row=2,sticky=E)
    Label(main_window, text="               ",bg=bg_colour3) .grid(column=2,row=0)

    Button(main_window, text="Quit",command=quit,width = 10, bg=bg_colour1) .grid(column=4, row=0,sticky=E)
    Button(main_window, text="Print Details",command=print_store_details, width = 10, bg=bg_colour1) .grid(column=4,row=1,sticky=E)
    Button(main_window, text="Delete Row",command=delete_row, width = 10, bg=bg_colour1) .grid(column=4,row=3,sticky=E)
    
    #image things
    img = PhotoImage(file='triangle2.5.png')
    append_details_button=Button(main_window, image=img,command=append_name,text="Append Details", bg=bg_colour1).grid(column=3,row=1)
    append_details_button.pack(pady=20)

#start the program running
def main():
    #Start the GUI up
    setup_buttons()
    main_window.mainloop()
    
#create empty list for store details and empty variable for entries in the list
counters = {'total_entries':0,'name_count':0}
store_details = []

main_window = Tk()
main_window.configure(bg=bg_colour3)

entry_name = Entry(main_window, bg=bg_colour1)
entry_name.grid(column=1,row=0)

entry_receipt = Entry(main_window, bg=bg_colour1)
entry_receipt.grid(column=1,row=1)

entry_hired_item = Entry(main_window, bg=bg_colour1)
entry_hired_item.grid(column=1,row=2)

entry_item_amount = Entry(main_window, bg=bg_colour1)
entry_item_amount.grid(column=1, row=3)

delete_item = Entry(main_window, bg=bg_colour1)
delete_item.grid(column=3,row=3)    

main()

